CREATE TABLE "SECURITY"."APPLICATION" (
    "ID" VARCHAR ( 255 ) PRIMARY KEY
);

CREATE TABLE "SECURITY"."ROLE" (
    "ID" VARCHAR ( 255 ) PRIMARY KEY
);

CREATE TABLE "SECURITY"."PERMISSION" (
    "ID" VARCHAR ( 255 ) PRIMARY KEY
);

CREATE TABLE "SECURITY"."MEMBER" (
    "ID" SERIAL PRIMARY KEY,
    "USERNAME" VARCHAR ( 255 ) UNIQUE NOT NULL,
    "PASSWORD" VARCHAR ( 255 ) NOT NULL,
    "EMAIL" VARCHAR ( 255 ) UNIQUE NOT NULL,
    "CREATED_ON" TIMESTAMP NOT NULL
);

CREATE TABLE "SECURITY"."MEMBER_ROLE" (
    "ID" SERIAL PRIMARY KEY,
    "MEMBER_ID" INTEGER NOT NULL,
    "APPLICATION" VARCHAR ( 255 ) NOT NULL,
    "ROLE" VARCHAR ( 255 ) NOT NULL,
    CONSTRAINT "FK_MEMBER_ROLES_USER" FOREIGN KEY ("MEMBER_ID") REFERENCES "SECURITY"."MEMBER"("ID"),
    CONSTRAINT "FK_MEMBER_ROLES_ROLE" FOREIGN KEY ("ROLE") REFERENCES "SECURITY"."ROLE"("ID"),
    CONSTRAINT "FK_MEMBER_ROLES_APPLICATION" FOREIGN KEY ("APPLICATION") REFERENCES "SECURITY"."APPLICATION"("ID")
);

CREATE TABLE "SECURITY"."MEMBER_ROLE_PERMISSION" (
   "ID" SERIAL PRIMARY KEY,
   "MEMBER_ROLE_ID" INTEGER NOT NULL,
   "PERMISSION" VARCHAR ( 255 ) NOT NULL,
   CONSTRAINT "FK_MEMBER_ROLE_PERMISSION_MEMBER_ROLE" FOREIGN KEY ("MEMBER_ROLE_ID") REFERENCES "SECURITY"."MEMBER_ROLE"("ID"),
   CONSTRAINT "FK_MEMBER_ROLE_PERMISSION_PERMISSION" FOREIGN KEY ("PERMISSION") REFERENCES "SECURITY"."PERMISSION"("ID")
);